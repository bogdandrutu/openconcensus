plugins {
    id "java-library"
    id "maven-publish"

    id "org.unbroken-dome.test-sets"
}

description = 'OpenTelemetry SDK Auto-configuration'
ext.moduleName = "io.opentelemetry.sdk.autoconfigure"

testSets {
    testConfigError
    testFullConfig
    testInitializeRegistersGlobal
    testJaeger
    testPrometheus
    testOtlpTls
    testZipkin
}

dependencies {
    api project(':sdk:all'),
            project(':sdk:metrics')

    compileOnly project(':extensions:trace-propagators')
    compileOnly project(':exporters:jaeger')
    compileOnly project(':exporters:logging')
    compileOnly project(':exporters:otlp:all')
    compileOnly project(':exporters:otlp:metrics')
    compileOnly project(':exporters:prometheus')
    compileOnly "io.prometheus:simpleclient_httpserver"
    compileOnly project(':exporters:zipkin')

    testImplementation project(':proto'),
            project(':sdk:testing'),
            'com.linecorp.armeria:armeria-junit5',
            'com.linecorp.armeria:armeria-grpc'
    testRuntimeOnly 'io.grpc:grpc-netty-shaded'
    testRuntimeOnly "org.slf4j:slf4j-simple"

    testFullConfigImplementation project(':extensions:trace-propagators')
    testFullConfigImplementation project(':exporters:jaeger')
    testFullConfigImplementation project(':exporters:logging')
    testFullConfigImplementation project(':exporters:otlp:all')
    testFullConfigImplementation project(':exporters:otlp:metrics')
    testFullConfigImplementation project(':exporters:prometheus')
    testFullConfigImplementation "io.prometheus:simpleclient_httpserver"
    testFullConfigImplementation project(':exporters:zipkin')

    testOtlpTlsImplementation project(':exporters:otlp:all')

    testJaegerImplementation project(':exporters:jaeger')

    testZipkinImplementation project(':exporters:zipkin')

    testConfigErrorImplementation project(':extensions:trace-propagators')
    testConfigErrorImplementation project(':exporters:jaeger')
    testConfigErrorImplementation project(':exporters:logging')
    testConfigErrorImplementation project(':exporters:otlp:all')
    testConfigErrorImplementation project(':exporters:otlp:metrics')
    testConfigErrorImplementation project(':exporters:prometheus')
    testConfigErrorImplementation "io.prometheus:simpleclient_httpserver"
    testConfigErrorImplementation project(':exporters:zipkin')
    testConfigErrorImplementation "org.junit-pioneer:junit-pioneer"

    testPrometheusImplementation project(':exporters:prometheus')
    testPrometheusImplementation "io.prometheus:simpleclient_httpserver"
}

testFullConfig {
    environment("OTEL_RESOURCE_ATTRIBUTES", "service.name=test,cat=meow")
    environment("OTEL_TRACE_EXPORTER", "otlp")
    environment("OTEL_METRICS_EXPORTER", "otlp")
    environment("OTEL_PROPAGATORS", "tracecontext,baggage,b3,b3multi,jaeger,ottracer,xray,test")
    environment("OTEL_BSP_SCHEDULE_DELAY", "10")
    environment("OTEL_IMR_EXPORT_INTERVAL", "10")
    environment("OTEL_EXPORTER_OTLP_HEADERS", "cat=meow,dog=bark")
    environment("OTEL_EXPORTER_OTLP_TIMEOUT", "5000")
    environment("OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT", "2")
}

testJaeger {
    environment("OTEL_TRACE_EXPORTER", "jaeger")
    environment("OTEL_BSP_SCHEDULE_DELAY", "10")
}

testOtlpTls {
    environment("OTEL_RESOURCE_ATTRIBUTES", "service.name=test,cat=meow")
    environment("OTEL_TRACE_EXPORTER", "otlp")
    environment("OTEL_BSP_SCHEDULE_DELAY", "10")
}

testZipkin {
    environment("OTEL_TRACE_EXPORTER", "zipkin")
    environment("OTEL_BSP_SCHEDULE_DELAY", "10")
}

testPrometheus {
    environment("OTEL_METRICS_EXPORTER", "prometheus")
    environment("OTEL_IMR_EXPORT_INTERVAL", "10")
}

check.dependsOn(testConfigError, testFullConfig, testJaeger, testPrometheus, testZipkin)
