plugins {
    id "java"
    id "maven-publish"

    id "ru.vyarus.animalsniffer"
}

description = 'OpenTelemetry SDK Common'
ext.moduleName = "io.opentelemetry.sdk.common"
ext.propertiesDir = "build/generated/properties/io/opentelemetry/sdk/common"

dependencies {
    api project(':opentelemetry-api')

    implementation libraries.guava

    annotationProcessor libraries.auto_value

    testAnnotationProcessor libraries.auto_value
    testCompileOnly libraries.auto_value_annotation

    testImplementation project(':opentelemetry-sdk-testing')
    testImplementation libraries.junit_pioneer

    signature libraries.android_signature
}

sourceSets {
    main {
        output.dir("build/generated/properties", builtBy: 'generateVersionResource')
    }
}

animalsniffer {
    // Don't check sourceSets.jmh and sourceSets.test
    sourceSets = [
            sourceSets.main
    ]
}

configurations {
    testClasses {
        extendsFrom(testRuntime)
    }
}

task testJar(type: Jar) {
    archiveClassifier.set("test")
    from sourceSets.test.output
}

// add the jar generated by the testJar task to the testClasses dependency
artifacts {
    testClasses testJar
}

task generateVersionResource {
    doLast {
        def folder = file(propertiesDir)
        folder.mkdirs()
        def propertiesFile = new File(folder.getAbsolutePath(), "version.properties")
        propertiesFile.write("sdk.version=${project.version}")
    }
}
